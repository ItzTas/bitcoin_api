// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: transactions.sql

package database

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const createTransaction = `-- name: CreateTransaction :one
INSERT INTO transactions (id, sender_id, receiver_id, amount, executed_at, is_between_users)
VALUES ($1, $2, $3, $4, $5, $6)
RETURNING id, sender_id, receiver_id, amount, executed_at, is_between_users
`

type CreateTransactionParams struct {
	ID             uuid.UUID
	SenderID       uuid.UUID
	ReceiverID     uuid.UUID
	Amount         string
	ExecutedAt     time.Time
	IsBetweenUsers bool
}

func (q *Queries) CreateTransaction(ctx context.Context, arg CreateTransactionParams) (Transaction, error) {
	row := q.db.QueryRowContext(ctx, createTransaction,
		arg.ID,
		arg.SenderID,
		arg.ReceiverID,
		arg.Amount,
		arg.ExecutedAt,
		arg.IsBetweenUsers,
	)
	var i Transaction
	err := row.Scan(
		&i.ID,
		&i.SenderID,
		&i.ReceiverID,
		&i.Amount,
		&i.ExecutedAt,
		&i.IsBetweenUsers,
	)
	return i, err
}
