// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: deposits.sql

package database

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const createDeposit = `-- name: CreateDeposit :one
INSERT INTO deposits (id, wallet_id, amount, executed_at)
VALUES ($1, $2, $3, $4)
RETURNING id, wallet_id, amount, executed_at
`

type CreateDepositParams struct {
	ID         uuid.UUID
	WalletID   uuid.UUID
	Amount     string
	ExecutedAt time.Time
}

func (q *Queries) CreateDeposit(ctx context.Context, arg CreateDepositParams) (Deposit, error) {
	row := q.db.QueryRowContext(ctx, createDeposit,
		arg.ID,
		arg.WalletID,
		arg.Amount,
		arg.ExecutedAt,
	)
	var i Deposit
	err := row.Scan(
		&i.ID,
		&i.WalletID,
		&i.Amount,
		&i.ExecutedAt,
	)
	return i, err
}
